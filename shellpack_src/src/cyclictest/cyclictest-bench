#!/bin/bash
# cyclictest
###SHELLPACK preamble cyclictest-bench v1.5
###SHELLPACK addon fragment

CYCLICTEST_BACKGROUND=none
sudo_required

###SHELLPACK parseargBegin
###SHELLPACK parseargInstall
###SHELLPACK parseargParam   --duration		CYCLICTEST_DURATION
###SHELLPACK parseargParam   --background	CYCLICTEST_BACKGROUND
###SHELLPACK parseargYes     --affinity		CYCLICTEST_AFFINITY
###SHELLPACK parseargEnd
###SHELLPACK monitor_hooks

###SHELLPACK init_only_start
###SHELLPACK check_external_install_required rttestbuild rttestbuild-${VERSION} ${VERSION}
###SHELLPACK check_external_install_required klp         klp-0			0

case $CYCLICTEST_BACKGROUND in
kernel-build)
	fragment prepare --method kernel-build
	;;
klp)
	fragment prepare --method klp
	;;
esac
###SHELLPACK init_only_end

cd $SHELLPACK_SOURCES/rttestbuild-${VERSION}-installed || die "Failed to change to rttest directory"
if [ "$CYCLICTEST_AFFINITY" = "yes" ]; then
	CYCLICTEST_AFFINITY_PARAM=-a
fi

BACKGROUND_PID=
case $CYCLICTEST_BACKGROUND in
hackbench)
	./hackbench -P -g $NUMCPUS -l 200000000 &
	BACKGROUND_PID=$!
	echo "Background hackbench $BACKGROUND_PID"
	;;
kernel-build)
	fragment run --method kernel-build
	;;
klp)
	fragment run --method klp
	;;
none)
	echo "No background task specified"
	;;
*)
	die "Unrecognised background task $CYCLICTEST_BACKGROUND"
	;;
esac
monitor_pre_hook $LOGDIR_RESULTS $P
echo Starting cyclictest threads
if [ "$CYCLICTEST_FINEGRAINED" != "yes" ]; then
	$MMTESTS_SUDO ./cyclictest --mlockall -p99 --threads $CYCLICTEST_AFFINITY_PARAM \
		--distance=0 --duration=$CYCLICTEST_DURATION --quiet 2>&1 | \
		tee $LOGDIR_RESULTS/cyclictest.log
else
	$MMTESTS_SUDO ./cyclictest --mlockall -p99 --threads $CYCLICTEST_AFFINITY_PARAM \
		--distance=0 --duration=$CYCLICTEST_DURATION -v 2>&1 | \
		stdout-buffer > $LOGDIR_RESULTS/cyclictest.log
fi

case $CYCLICTEST_BACKGROUND in
kernel-build)
	echo Shutdown fragment kernel-build
	fragment cleanup --method kernel-build
	;;
klp)
	echo "Shutdown fragment klp"
	fragment cleanup --method klp
	;;
*)
	echo Shutdown background $CYCLICTEST_BACKGROUND: $BACKGROUND_PID
	if [ "$BACKGROUND_PID" != "" ]; then
		shutdown_pid $CYCLICTEST_BACKGROUND $BACKGROUND_PID
	fi
esac
monitor_post_hook $LOGDIR_RESULTS $P

if [ "$CYCLICTEST_FINEGRAINED" = "yes" ]; then
	echo Compressing $LOGDIR_RESULTS/cyclictest.log
	xz $LOGDIR_RESULTS/cyclictest.log
fi
exit $SHELLPACK_SUCCESS

###SHELLPACK include_file klp_tc_1.sh
