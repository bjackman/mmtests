# prepare:	Create the kernel files that will be built
# run:		Build defconfig kernel in a loop, each loop cleans
# cleanup:	Shutdown kernel build
#
MIRROR_LOCATION="$WEBROOT/kernbench"
KERNEL_VERSION=5.14
WEB_LOCATION=https://www.kernel.org/pub/linux/kernel/v5.x

KBUILD_JOBS=$NUMCPUS

while [ $# -ge 1 ]; do
	case $1 in
	--kbuild-jobs)
		KBUILD_JOBS=$2
		shift 2
		;;
	*)
		die "Unrecognised $METHOD arg $1"
		;;
	esac
done

case $COMMAND in
prepare)
	cd $SHELLPACK_DATA
	if [ ! -e ./linux-$KERNEL_VERSION.tar.xz ]; then
		sources_fetch $WEB_LOCATION/linux-$KERNEL_VERSION.tar.xz $MIRROR_LOCATION/linux-$KERNEL_VERSION.tar.xz ./linux-$KERNEL_VERSION.tar.xz
	fi
	echo Extracting linux-$KERNEL_VERSION.tar.xz
	tar xf linux-$KERNEL_VERSION.tar.xz || die "Failed to extract"
	cd linux-$KERNEL_VERSION || die "Unexpected layout"
	yes '' | make defconfig &>/dev/null || die "Failed to make defconfig"

	cat << EOF > build-loop.sh
#!/bin/bash
KBUILD_PID=
cleanup() {
	touch /tmp/mmtests-fragment-kernel-build-exit
	KBUILD_PID=\`cat /tmp/mmtests-fragment-kernel-build-make-pid\`
	if [ "\$KBUILD_PID" != "" ]; then
		kill \$KBUILD_PID
		rm -f /tmp/mmtests-fragment-kernel-build-make-pid
	fi
}
trap cleanup TERM
cd $SHELLPACK_DATA/linux-$KERNEL_VERSION || exit -1
rm -f /tmp/mmtests-fragment-kernel-build-exit
while [ ! -e /tmp/mmtests-fragment-kernel-build-exit ]; do
	make -j$KBUILD_JOBS clean &> /dev/null
	make -j$KBUILD_JOBS vmlinux &> /dev/null &
	KBUILD_PID=\$!
	echo \$KBUILD_PID > /tmp/mmtests-fragment-kernel-build-make-pid
	wait
done
EOF
	chmod a+x build-loop.sh
	;;
run)
	echo Starting background kernel build loop
	nohup $SHELLPACK_DATA/linux-$KERNEL_VERSION/build-loop.sh &
	KBUILD_PID=$!
	echo $KBUILD_PID > /tmp/mmtests-fragment-kernel-build-loop-pid

	wait_on_pid_file /tmp/mmtests-fragment-kernel-build-make-pid 60
	echo
	;;
cleanup)
	shutdown_pid "kernel-build" `cat /tmp/mmtests-fragment-kernel-build-loop-pid`

	echo Cleaning up kbuild
	rm -rf $SHELLPACK_DATA/linux-$KERNEL_VERSION
	rm -f  /tmp/mmtests-fragment-kernel-build-loop-pid
	rm -f  /tmp/mmtests-fragment-kernel-build-make-pid
	rm -f  /tmp/mmtests-fragment-kernel-build-exit
	;;
esac

exit 0
